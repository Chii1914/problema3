<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Lista de Compradores</title>
  <!-- Incluir Bootstrap CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body class="container mt-5">
  <h1 class="mb-4">Lista de Compradores</h1>

  <!-- Formulario para agregar un nuevo comprador -->
  <form id="addCompradorForm" class="mb-4">
    <div class="form-group">
      <label for="nombreComprador">Nombre del Comprador:</label>
      <input type="text" class="form-control" id="nombreComprador" placeholder="Ingrese el nombre del comprador" required>
    </div>
    <button type="submit" class="btn btn-primary">Agregar Comprador</button>
  </form>

  <!-- Tabla de compradores -->
  <table class="table table-striped table-bordered">
    <thead class="thead-dark">
      <tr>
        <th>ID</th>
        <th>Nombre</th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody id="compradores-table">
      <!-- Los datos se cargarán aquí mediante JavaScript -->
    </tbody>
  </table>

  <script>
    // Obtener los datos de los compradores y llenar la tabla
    function fetchCompradores() {
      fetch('http://localhost:4001/api/compradores')
        .then(response => response.json())
        .then(compradores => {
          const table = document.getElementById('compradores-table');
          table.innerHTML = '';
          if (compradores && compradores.length > 0) {
            compradores.forEach(comprador => {
              const row = document.createElement('tr');
              row.innerHTML = `
                <td>${comprador.idComprador}</td>
                <td>${comprador.nombreComprador}</td>
                <td>
                  <button class="btn btn-warning btn-sm" onclick="editComprador(${comprador.idComprador}, '${comprador.nombreComprador}')">Editar</button>
                  <button class="btn btn-danger btn-sm" onclick="deleteComprador(${comprador.idComprador})">Eliminar</button>
                </td>
              `;
              table.appendChild(row);
            });
          } else {
            const row = document.createElement('tr');
            row.innerHTML = '<td colspan="3">No hay compradores registrados.</td>';
            table.appendChild(row);
          }
        })
        .catch(error => {
          console.error('Error fetching compradores:', error);
          const row = document.createElement('tr');
          row.innerHTML = '<td colspan="3" class="text-danger">Error fetching data.</td>';
          document.getElementById('compradores-table').appendChild(row);
        });
    }

    // Función para agregar un nuevo comprador
    document.getElementById('addCompradorForm').addEventListener('submit', function(e) {
      e.preventDefault();
      const nombreComprador = document.getElementById('nombreComprador').value;

      fetch('http://localhost:4001/api/compradores', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ nombreComprador })
      })
      .then(response => response.json())
      .then(() => {
        document.getElementById('nombreComprador').value = '';
        fetchCompradores();
      })
      .catch(error => console.error('Error adding comprador:', error));
    });

    // Función para editar un comprador
    function editComprador(id, nombre) {
      const newName = prompt('Ingrese el nuevo nombre del comprador:', nombre);
      if (newName) {
        fetch(`http://localhost:4001/api/compradores/${id}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ nombreComprador: newName })
        })
        .then(() => fetchCompradores())
        .catch(error => console.error('Error editing comprador:', error));
      }
    }

    // Función para eliminar un comprador
    function deleteComprador(id) {
      if (confirm('¿Está seguro de que desea eliminar este comprador?')) {
        fetch(`http://localhost:4001/api/compradores/${id}`, {
          method: 'DELETE'
        })
        .then(() => fetchCompradores())
        .catch(error => console.error('Error deleting comprador:', error));
      }
    }

    // Cargar los compradores al cargar la página
    fetchCompradores();
  </script>

  <!-- Incluir Bootstrap JS (opcional) -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
